  resource 'ChefServer', :Type => 'AWS::EC2::Instance', :Metadata => { :'AWS::CloudFormation::Init' => { :config => { :packages => { :apt => { :s3cmd => [] } }, :sources => { :'/home/ubuntu/chef-repo' => 'https://github.com/opscode/chef-repo/tarball/master', :'/home/ubuntu/chef-repo/cookbooks' => { :Ref => 'CookbookLocation' }, :'/home/ubuntu/chef-repo/roles' => { :Ref => 'RoleLocation' } }, :files => { :'/home/ubuntu/setup_environment' => { :source => 'https://s3.amazonaws.com/cloudformation-examples/setup-chef-server-with-knife', :mode => '000755', :owner => 'ubuntu', :group => 'ubuntu' }, :'/home/ubuntu/.s3cfg' => { :content => { :'Fn::Join' => [ '', [ "[default]\n", 'access_key = ', { :Ref => 'HostKeys' }, "\n", 'secret_key = ', { :'Fn::GetAtt' => [ 'HostKeys', 'SecretAccessKey' ] }, "\n", "use_https = True\n" ] ] }, :mode => '000644', :owner => 'ubuntu', :group => 'ubuntu' }, :'/home/ubuntu/chef_11.10.0-1.ubuntu.12.04_amd64.deb' => { :source => 'https://s3.amazonaws.com/cloudformation-examples/chef_11.10.0-1.ubuntu.12.04_amd64.deb', :mode => '000664', :owner => 'ubuntu', :group => 'ubuntu' }, :'/home/ubuntu/chef-server_11.0.10-1.ubuntu.12.04_amd64.deb' => { :source => 'https://s3.amazonaws.com/cloudformation-examples/chef-server_11.0.10-1.ubuntu.12.04_amd64.deb', :mode => '000664', :owner => 'ubuntu', :group => 'ubuntu' } } } } }, :Properties => {
      :SecurityGroups => [
          { :Ref => 'ChefServerSecurityGroup' },
      ],
      :ImageId => {
          :'Fn::FindInMap' => [
              'AWSRegion2AMI',
              { :Ref => 'AWS::Region' },
              'id',
          ],
      },
      :UserData => {
          :'Fn::Base64' => {
              :'Fn::Join' => [
                  '',
                  [
                      "#!/bin/bash\n",
                      "function error_exit\n",
                      "{\n",
                      '  cfn-signal -e 1 -r "$1" \'',
                      { :Ref => 'ChefServerWaitHandle' },
                      "'\n",
                      "  exit 1\n",
                      "}\n",
                      "apt-get -y install python-setuptools\n",
                      "easy_install https://s3.amazonaws.com/cloudformation-examples/aws-cfn-bootstrap-latest.tar.gz\n",
                      'cfn-init --region ',
                      { :Ref => 'AWS::Region' },
                      '    -s ',
                      { :Ref => 'AWS::StackId' },
                      ' -r ChefServer ',
                      "|| error_exit 'Failed to run cfn-init'\n",
                      "# Bootstrap chef\n",
                      "dpkg -i /home/ubuntu/chef_11.10.0-1.ubuntu.12.04_amd64.deb > /tmp/chef_install.log 2>&1 || error_exit 'Failed to install chef client tools'\n",
                      "dpkg -i /home/ubuntu/chef-server_11.0.10-1.ubuntu.12.04_amd64.deb >> /tmp/chef_install.log 2>&1 || error_exit 'Failed to install chef server'\n",
                      "sleep 5\n",
                      "sudo /usr/bin/chef-server-ctl reconfigure > /tmp/chef_configure.log 2>&1 || error_exit 'Failed to configure chef server'\n",
                      "sleep 5\n",
                      "sudo chef-server-ctl start\n",
                      "# Setup development environment in ubuntu user\n",
                      "sudo -u ubuntu /home/ubuntu/setup_environment > /tmp/setup_environment.log 2>&1 || error_exit 'Failed to bootstrap chef server'\n",
                      "# copy validation key to S3 bucket\n",
                      's3cmd -c /home/ubuntu/.s3cfg put /etc/chef-server/validation.pem s3://',
                      { :Ref => 'PrivateKeyBucket' },
                      "/validation.pem > /tmp/put_validation_key.log 2>&1 || error_exit 'Failed to put Chef Server validation key'\n",
                      "# If all went well, signal success\n",
                      'cfn-signal -e $? -r \'Chef Server configuration\' \'',
                      { :Ref => 'ChefServerWaitHandle' },
                      "'\n",
                  ],
              ],
          },
      },
      :KeyName => { :Ref => 'KeyName' },
      :InstanceType => { :Ref => 'InstanceType' },
  }

